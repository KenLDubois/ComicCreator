// <auto-generated />
using System;
using ComicCreator.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComicCreator.Migrations
{
    [DbContext(typeof(ComicCreatorContext))]
    [Migration("20190212203035_reqire-titleID-for-panels")]
    partial class reqiretitleIDforpanels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MU")
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComicCreator.Models.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("CoverImageContent");

                    b.Property<string>("CoverImageFileName")
                        .HasMaxLength(100);

                    b.Property<string>("CoverImageMimeType")
                        .HasMaxLength(256);

                    b.Property<int?>("IssueNumber");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ReleaseDate");

                    b.Property<int>("TitleId");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("ComicCreator.Models.Panel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IssueId");

                    b.Property<int>("OrderNumber");

                    b.Property<byte[]>("PanelImageContent");

                    b.Property<string>("PanelImageFileName")
                        .HasMaxLength(100);

                    b.Property<string>("PanelImageMimeType")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("IssueId");

                    b.ToTable("Panels");
                });

            modelBuilder.Entity("ComicCreator.Models.PanelText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderNumber");

                    b.Property<int>("PanelId");

                    b.Property<double?>("TailX");

                    b.Property<double?>("TailY");

                    b.Property<string>("TextClass");

                    b.Property<string>("TextContent");

                    b.HasKey("Id");

                    b.HasIndex("PanelId");

                    b.ToTable("PanelTexts");
                });

            modelBuilder.Entity("ComicCreator.Models.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<byte[]>("TitleImageContent");

                    b.Property<string>("TitleImageFileName")
                        .HasMaxLength(100);

                    b.Property<string>("TitleImageMimeType")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("ComicCreator.Models.Issue", b =>
                {
                    b.HasOne("ComicCreator.Models.Title", "Title")
                        .WithMany("Issues")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ComicCreator.Models.Panel", b =>
                {
                    b.HasOne("ComicCreator.Models.Issue")
                        .WithMany("Panels")
                        .HasForeignKey("IssueId");
                });

            modelBuilder.Entity("ComicCreator.Models.PanelText", b =>
                {
                    b.HasOne("ComicCreator.Models.Panel", "Panel")
                        .WithMany("PanelTexts")
                        .HasForeignKey("PanelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
